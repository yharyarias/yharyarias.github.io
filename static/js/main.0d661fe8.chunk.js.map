{"version":3,"sources":["App.js","theme.js","index.js"],"names":["App","React","useState","img","setImg","clase","setClase","model","setModel","imgRef","useRef","classes","style","color","integrantes","title","image","nombre","bio","tecnologias","subirimg","f","reader","FileReader","readAsDataURL","onloadend","e","result","getClase","then","i","indexOf","Math","max","a","tensor","tf","fromPixels","current","resizeNearestNeighbor","toFloat","div","expandDims","predict","data","loadGraphModel","useEffect","getModel","console","log","Fragment","only","maxWidth","height","id","container","spacing","justify","alignContent","alignItems","position","elevation","my","src","width","alt","variant","align","gutterBottom","flexGrow","fontWeight","href","item","md","xs","accept","display","type","onChange","target","files","htmlFor","component","borderTopRightRadius","borderBottomRightRadius","ref","border","paddingTop","map","tecnologia","index","key","name","integrante","size","aria-label","bottom","right","marginBottom","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","overrides","MuiCardMedia","root","top","borderRadius","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0d661fe8.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Grid,\n  Container,\n  Typography,\n  Box,\n  Button,\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Fab,\n  Hidden\n} from \"@material-ui/core\";\nimport { ArrowUpward } from \"@material-ui/icons\";\nimport * as tf from '@tensorflow/tfjs';\nimport { loadGraphModel } from '@tensorflow/tfjs';\n\nconst App = () => {\n  const [img, setImg] = React.useState(\"gola.png\");\n  const [clase, setClase] = React.useState(\"Prediction...\");\n  const [model, setModel] = React.useState(\"\");\n  const imgRef = React.useRef();\n  const classes = [<span style={{ color: \"orange\" }}>TIRADS4</span>, <span style={{ color: \"red\" }}>TIRADS5</span>, <span style={{ color: \"#46BF71\" }}>TIRADS1</span>, <span style={{ color: \"#D7B723\" }}>TIRADS3</span>, <span style={{ color: \"#A9BF46\" }}>TIRADS2</span>];\n\n  let integrantes = [\n    {\n      title: \"boris narvaez\",\n      image: \"boris.jpeg\",\n      nombre: \"Boris M. Narvaez\",\n      bio:\n        \"Dr. Radiology Resident. Universidad Industrial de Santander / Universidad Autónoma de Bucaramanga\",\n    },\n    {\n      title: \"federico lubinus\",\n      image: \"lubinus.jpeg\",\n      nombre: \"Federico Lubinus\",\n      bio:\n        \"Dr. Radiology Specialist. Professor Universidad Autónoma de Bucaramanga.\",\n    },\n    {\n      title: \"estefania arias\",\n      image: \"yhary.jpeg\",\n      nombre: \"Yhary Arias\",\n      bio:\n        \"Systems Engineer, Universidad Autónoma de Bucaramanga.\",\n    },\n    {\n      title: \"ariel ortiz\",\n      image: \"ariel.jpeg\",\n      nombre: \"Ariel Ortiz\",\n      bio:\n        \"Systems Engineer, Universidad Nacional de Colombia, Master in UX.\",\n    },\n  ];\n\n  let tecnologias = [\n    { \"name\": \"TensorFlow\", \"img\": \"tensorflow.png\" },\n    { \"name\": \"Keras\", \"img\": \"keras.png\" },\n    { \"name\": \"Python\", \"img\": \"python.png\" },\n  ];\n  function subirimg(f) {\n    let reader = new FileReader();\n    reader.readAsDataURL(f[0]);\n    reader.onloadend = function (e) {\n      setImg(reader.result);\n      getClase().then(e => {\n        let i = e.indexOf(Math.max(...e));\n        setClase(classes[i]);\n      });\n    };\n  }\n\n  async function getClase() {\n    let tensor = tf.browser.fromPixels(imgRef.current).resizeNearestNeighbor([128, 128]).toFloat().div(tf.scalar(255.0)).expandDims();\n    return await model.predict(tensor).data();\n  }\n\n  async function getModel() {\n    return await loadGraphModel('model.json');\n  }\n\n  React.useEffect(() => {\n    getModel().then(e => {\n      setModel(e);\n      console.log(\"Ya cargó\");\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Hidden only={[\"xs\"]}>\n        <Container maxWidth=\"md\" style={{ height: \"100%\" }} id=\"inicio\">\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n          >\n            <AppBar position=\"relative\" color=\"transparent\" elevation={0}>\n              <Toolbar>\n                <Box my={8}>\n                  <img src=\"colibri.png\" height=\"250\" width=\"250\" alt=\"colibri\" />\n                </Box>\n                <Typography\n                  variant=\"h3\"\n                  color=\"textSecondary\"\n                  align=\"left\"\n                  gutterBottom\n                  style={{ flexGrow: 1, fontWeight: \"bold\" }}\n                >\n                  Viena Demo\n              </Typography>\n                <Button color=\"inherit\" href=\"#infotec\">TECHNICAL INFORMATION</Button>\n                <Button color=\"inherit\" href=\"#colab\">colaborators</Button>\n              </Toolbar>\n            </AppBar>\n            <Grid container item md={6}>\n              <Typography\n                variant=\"h2\"\n                color=\"textSecondary\"\n                align=\"left\"\n                gutterBottom\n              >\n                Description\n            </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"textSecondary\"\n                align=\"right\"\n                gutterBottom\n              >\n                To design a model based on convoluted neural networks capable of performing automatic detection of thyroid nodule (TN) on ultrasound (US) and classifying its risk of malignancy based on EU TIRADS 2017 criteria. Also, to identify inter and intraobserver variability between a senior and junior radiologists for TN classification and compare levels of accuracy on classifying a TN between radiologists and a neural network model.\n            </Typography>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              alignItems=\"center\"\n              alignContent=\"center\"\n              item\n              md={6}\n              spacing={3}\n            >\n              <Grid item xs={6}>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-file\"\n                  type=\"file\"\n                  onChange={(e) => subirimg(e.target.files)}\n                />\n                <label htmlFor=\"contained-button-file\">\n                  <Button color=\"primary\" variant=\"contained\" component=\"span\" style={{ borderTopRightRadius: 100, borderBottomRightRadius: 100 }}>\n                    PREDICT\n              </Button>\n                </label>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"textSecondary\"\n                  align=\"justify\"\n                  gutterBottom\n                >\n                  {clase}\n                </Typography>\n              </Grid>\n              <Grid item\n                xs={10}>\n                <img src={img} alt=\"gola\" height=\"300\" width=\"300\" ref={imgRef} style={{ border: \"1px solid\" }} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n        <Container maxWidth=\"md\" style={{ display: \"block\", height: \"100%\" }} id=\"infotec\">\n          <Grid\n            container\n            spacing={3}\n            justify=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n            style={{ paddingTop: 50 }}\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h2\"\n                color=\"textSecondary\"\n                align=\"center\"\n                gutterBottom\n              >\n                TECHNICAL INFORMATION\n            </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"textSecondary\"\n                align=\"justify\"\n                gutterBottom\n              >\n                The prediction model was built using a Convlutional Neural Network Architecture made in Python with Tensorflow and Keras. The model make a process to extract the most important characteristics from medical thyroid ultrasounds classifying them into few classes of TIRADS-EU.\n            </Typography>\n\n            </Grid>\n            {tecnologias.map((tecnologia, index) =>\n              <Grid key={index}\n                item xs={4}>\n                <Grid\n                  container\n                  justify=\"center\"\n                  alignContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <img src={tecnologia.img} height=\"100\" width=\"100\" alt={tecnologia.name} />\n                </Grid>\n                <Grid>\n                  <Typography gutterBottom variant=\"h6\" align=\"center\">\n                    {tecnologia.name}\n                  </Typography>\n                </Grid>\n              </Grid>\n            )}\n\n          </Grid>\n        </Container>\n        <Container maxWidth=\"md\" style={{ display: \"block\", height: \"100%\" }} id=\"colab\">\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid\n              container\n              item\n              md={12}\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography\n                variant=\"h2\"\n                color=\"textSecondary\"\n                align=\"left\"\n                gutterBottom\n              >\n                COLLABORATORS\n            </Typography>\n            </Grid>\n            <Grid container spacing={2}>\n              {integrantes.map((integrante, index) => (\n                <Grid\n                  container\n                  justify=\"center\"\n                  alignContent=\"center\"\n                  alignItems=\"center\"\n                  item\n                  md={3}\n                  key={index}\n                >\n                  <CardMedia\n                    style={{\n                      height: 100,\n                      width: 100,\n                    }}\n                    image={integrante.image}\n                    title={integrante.title}\n                  />\n                  <Card>\n                    <CardContent style={{ height: 300 }}>\n                      <Typography gutterBottom variant=\"h6\" align=\"center\">\n                        {integrante.nombre}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                      >\n                        {integrante.bio}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button size=\"small\" color=\"primary\">\n                        Learn More\n                    </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Container>\n        <Fab color=\"primary\" aria-label=\"add\" style={{ position: \"fixed\", bottom: 50, right: 150 }} href=\"#inicio\">\n          <ArrowUpward />\n        </Fab>\n      </Hidden>\n      <Hidden only={[\"sm\", \"md\", \"lg\", \"xl\"]}>\n        <Container maxWidth=\"xs\" style={{ marginBottom: 75 }}>\n          <Grid\n            container\n            justify=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n          >\n            <AppBar position=\"relative\" color=\"transparent\" elevation={0}>\n              <Toolbar>\n                <Box my={4}>\n                  <img src=\"colibri.png\" height=\"100\" width=\"100\" alt=\"colibri\" />\n                </Box>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  align=\"left\"\n                  gutterBottom\n                  style={{ fontWeight: \"bold\" }}\n                >\n                  Viena Demo\n              </Typography>\n              </Toolbar>\n            </AppBar>\n            <Grid\n              container\n              item\n              xs={12}\n              spacing={1}\n            >\n              <Grid item xs={12}>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-file\"\n                  type=\"file\"\n                  onChange={(e) => subirimg(e.target.files)}\n                />\n                <label htmlFor=\"contained-button-file\">\n                  <Button color=\"primary\" variant=\"contained\" component=\"span\" style={{ borderTopRightRadius: 100, borderBottomRightRadius: 100 }}>\n                    PREDICT\n              </Button>\n                </label>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  align=\"justify\"\n                  gutterBottom\n                >\n                  {clase}\n                </Typography>\n              </Grid>\n              <Grid item\n                xs={10}>\n                <img src={img} alt=\"gola\" height=\"200\" width=\"200\" ref={imgRef} style={{ border: \"1px solid\" }} />\n              </Grid>\n            </Grid>\n            <Grid container item xs={12}>\n              <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                align=\"left\"\n                gutterBottom\n              >\n                Description\n            </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"textSecondary\"\n                align=\"justify\"\n                gutterBottom\n              >\n                To design a model based on convoluted neural networks capable of performing automatic detection of thyroid nodule (TN) on ultrasound (US) and classifying its risk of malignancy based on EU TIRADS 2017 criteria. Also, to identify inter and intraobserver variability between a senior and junior radiologists for TN classification and compare levels of accuracy on classifying a TN between radiologists and a neural network model.\n            </Typography>\n            </Grid>\n\n          </Grid>\n        </Container>\n        <Container maxWidth=\"xs\" style={{ marginBottom: 75 }}>\n          <Grid\n            container\n            spacing={3}\n            justify=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n            style={{ paddingTop: 50 }}\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                align=\"center\"\n                gutterBottom\n              >\n                TECHNICAL INFORMATION\n            </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"textSecondary\"\n                align=\"justify\"\n                gutterBottom\n              >\n                The prediction model was built using a Convlutional Neural Network Architecture made in Python with Tensorflow and Keras. The model make a process to extract the most important characteristics from medical thyroid ultrasounds classifying them into few classes of TIRADS-EU.\n            </Typography>\n\n            </Grid>\n            {tecnologias.map((tecnologia, index) =>\n              <Grid key={index}\n                item xs={12}>\n                <Grid\n                  container\n                  justify=\"center\"\n                  alignContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <img src={tecnologia.img} height=\"100\" width=\"100\" alt={tecnologia.name} />\n                </Grid>\n                <Grid>\n                  <Typography gutterBottom variant=\"h6\" align=\"center\">\n                    {tecnologia.name}\n                  </Typography>\n                </Grid>\n              </Grid>\n            )}\n\n          </Grid>\n        </Container>\n        <Container maxWidth=\"xs\"  >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid\n              container\n              item\n              md={12}\n              justify=\"center\"\n              alignContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography\n                variant=\"h6\"\n                color=\"textSecondary\"\n                align=\"left\"\n                gutterBottom\n              >\n                COLLABORATORS\n            </Typography>\n            </Grid>\n            <Grid container spacing={2}>\n              {integrantes.map((integrante, index) => (\n                <Grid\n                  container\n                  justify=\"center\"\n                  alignContent=\"center\"\n                  alignItems=\"center\"\n                  item\n                  md={3}\n                  key={index}\n                >\n                  <CardMedia\n                    style={{\n                      height: 100,\n                      width: 100,\n                    }}\n                    image={integrante.image}\n                    title={integrante.title}\n                  />\n                  <Card>\n                    <CardContent style={{ height: 150 }}>\n                      <Typography gutterBottom variant=\"h6\" align=\"center\">\n                        {integrante.nombre}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                      >\n                        {integrante.bio}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button size=\"small\" color=\"primary\">\n                        Learn More\n                    </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Container>\n      </Hidden>\n\n    </React.Fragment>\n  );\n};\n\nexport default App;","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#e6e6e6\",\n    },\n  },\n  overrides: {\n    MuiCardMedia: {\n      root: {\n        position:\"relative\",\n        top:15,\n        borderRadius: \"50%\",\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}